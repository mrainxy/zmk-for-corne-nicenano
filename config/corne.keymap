/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo1 {
            bindings = <&kp LBKT>;
            key-positions = <3 4>;
        };

        combo2 {
            bindings = <&kp RBKT>;
            key-positions = <7 8>;
        };

        combo3 {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <15 16>;
        };

        combo4 {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
        };

        combo5 {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <27 28>;
        };

        combo6 {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <31 32>;
        };

        combo7 {
            bindings = <&kp BACKSLASH>;
            key-positions = <5 6>;
        };

        combo8 {
            bindings = <&kp PIPE>;
            key-positions = <17 18>;
        };

        combo9 {
            bindings = <&to 0>;
            key-positions = <1 10>;
        };

        combo10 {
            bindings = <&to 1>;
            key-positions = <2 9>;
        };
    };

    behaviors {
        tab_esc_ctrl: tab_esc_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_ESC_CTRL";
            #binding-cells = <0>;
            bindings = <&mt LCTRL ESC>, <&kp TAB>;
        };

        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <180>;
            global-quick-tap;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            global-quick-tap;
        };

        caps_esc_ctrl: caps_esc_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_ESC_CTRL";
            #binding-cells = <0>;
            bindings = <&mt LCTRL ESC>, <&kt CAPSLOCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac_layer {
            bindings = <
&kp LS(ESCAPE)  &kp Q            &kp W            &kp E         &kp R          &kp T         &kp Y      &kp U      &kp I         &kp O    &kp P          &kp BACKSPACE
&kp CAPS        &gqt LEFT_GUI A  &gqt LEFT_ALT S  &gqt LCTRL D  &gqt LSHIFT F  &kp G         &kp H      &kp J      &kp K         &kp L    &kp SEMICOLON  &kp SQT
&kp LCTRL       &kp Z            &kp X            &kp C         &kp V          &kp B         &kp N      &kp M      &kp COMMA     &kp DOT  &kp FSLH       &kp RIGHT_WIN
                                                  &kp LSHIFT    &kp NUMBER_1   &kp DELETE    &kp SPACE  &kp ENTER  &kp NUMBER_2
            >;
        };

        win_layer {
            bindings = <
&kp ESCAPE    &kp Q   &kp PLUS      &kp MINUS       &kp F11         &kp F12         &kp NUMBER_7  &kp NUMBER_8          &kp NUMBER_9  &kp NUMBER_0  &kp P         &kp BACKSPACE
&kp CAPSLOCK  &kp F1  &kp F2        &kp F3          &kp F4          &kp F5          &kp NUMBER_4  &gqt RSHIFT NUMBER_5  &kp NUMBER_6  &kp EQUAL     &kp ASTERISK  &kp SQT
&kp LCTRL     &kp Z   &kp C_VOL_DN  &kp C           &kp V           &kp C_VOL_UP    &kp NUMBER_1  &kp NUMBER_2          &kp NUMBER_3  &kp DOT       &kp FSLH      &kp RIGHT_WIN
                                    &kp LEFT_SHIFT  &lt 2 LEFT_ALT  &kp DELETE      &kp SPACE     &ltq 3 BSPC           &kp TAB
            >;
        };

        layer_1 {
            bindings = <
&kp ESC       &kp PIPE     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp NUMBER_4  &kp NUMBER_5     &kp GRAVE       &none           &kp LEFT_BRACE    &kp RIGHT_BRACE        &kp NUMBER_0   &kp BACKSPACE
&kp CAPSLOCK  &kp AT_SIGN  &kp HASH              &kp DOLLAR             &none         &kp AMPERSAND    &kp UNDERSCORE  &kp C_VOL_DN    &kp LEFT_BRACKET  &kp RC(RIGHT_BRACKET)  &kp C_VOL_UP   &kp SQT
&kp LCTRL     &kp F6       &kp F7                &kp F8                 &kp F9        &kp F10          &kp LEFT        &kp DOWN_ARROW  &kp UP_ARROW      &kp RIGHT              &kp RC(SLASH)  &kp RIGHT_WIN
                                                 &kp LEFT_SHIFT         &trans        &kp DELETE       &kp SPACE       &kp ENTER       &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &none     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0    &trans  &trans    &kp UP    &trans     &trans  &trans
&trans  &kp CAPS  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_DOT         &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &kp DEL   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp AT_SIGN        &trans  &trans    &trans    &trans     &trans  &trans
                                   &trans           &trans           &trans             &trans  &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR    &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
